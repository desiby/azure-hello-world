
name: sample CI

on:
  push:
    branches:
      - feature-*
      - main
  pull_request:
      branches:
      - feature-*
      - main
  workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
    
        steps:
        - uses: actions/checkout@v2
        
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.x'
        - name: Install terraform
          run: |
            sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
            wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
            gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt-get install terraform
            terraform -version    
        - name: Set up Node.js
          uses: actions/setup-node@v2
          with:
              node-version: '20.13.1'
        - run: npm install --global cdktf-cli@latest
        - name: Install pipenv
          run: |
            python -m pip install --upgrade pip
            pip install pipenv
            pipenv install --dev    
        - name: Synthesize Terraform
          run: cdktf synth

    test:
        needs: build
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.x'
        - name: Install terraform
          run: |
            sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
            wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
            gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt-get install terraform
            terraform -version
        - name: Set up Node.js
          uses: actions/setup-node@v2
          with:
              node-version: '20.13.1'
        - run: npm install --global cdktf-cli@latest
        - name: Install pipenv and pytest
          run: |
            python -m pip install --upgrade pip
            pip install pipenv
            pipenv install --dev
            pip install -U pytest
        - name: Run tests
          run: pipenv run pytest main-test.py -vvv
       
    deploy-stage:
        needs: test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/release-*'
        steps:
        - uses: actions/checkout@v2
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.x'
        - name: Install terraform
          run: |
            sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
            wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
            gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt-get install terraform
            terraform -version
        - name: Set up Node.js
          uses: actions/setup-node@v2
          with:
              node-version: '20.13.1'
        - run: npm install --global cdktf-cli@latest
        - name: Install pipenv
          run: |
            python -m pip install --upgrade pip
            pip install pipenv
            pipenv install --dev
        - name: Deploy to dev
          run: |
            cdktf deploy staging-stack --auto-approve
    